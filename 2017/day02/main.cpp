#include <iostream>
#include <vector>

using namespace std;

// Input file converted to an array using `xxd -i`
unsigned char input[] = {
  0x31, 0x30, 0x34, 0x09, 0x32, 0x34, 0x30, 0x09, 0x31, 0x34, 0x37, 0x09,
  0x32, 0x34, 0x36, 0x09, 0x31, 0x32, 0x33, 0x09, 0x31, 0x37, 0x35, 0x09,
  0x33, 0x37, 0x32, 0x09, 0x37, 0x31, 0x09, 0x31, 0x31, 0x36, 0x09, 0x32,
  0x33, 0x30, 0x09, 0x32, 0x36, 0x30, 0x09, 0x31, 0x31, 0x38, 0x09, 0x32,
  0x30, 0x32, 0x09, 0x32, 0x37, 0x30, 0x09, 0x32, 0x37, 0x37, 0x09, 0x32,
  0x39, 0x32, 0x0a, 0x37, 0x34, 0x30, 0x09, 0x37, 0x35, 0x35, 0x09, 0x31,
  0x33, 0x35, 0x09, 0x32, 0x30, 0x35, 0x09, 0x34, 0x32, 0x39, 0x09, 0x38,
  0x32, 0x32, 0x09, 0x38, 0x34, 0x34, 0x09, 0x39, 0x30, 0x09, 0x38, 0x32,
  0x38, 0x09, 0x31, 0x31, 0x35, 0x09, 0x34, 0x34, 0x30, 0x09, 0x38, 0x30,
  0x35, 0x09, 0x35, 0x32, 0x36, 0x09, 0x39, 0x31, 0x09, 0x35, 0x31, 0x39,
  0x09, 0x33, 0x37, 0x33, 0x0a, 0x31, 0x36, 0x33, 0x30, 0x09, 0x39, 0x39,
  0x31, 0x09, 0x31, 0x34, 0x37, 0x31, 0x09, 0x31, 0x32, 0x39, 0x34, 0x09,
  0x35, 0x32, 0x09, 0x31, 0x35, 0x36, 0x36, 0x09, 0x35, 0x30, 0x09, 0x31,
  0x35, 0x30, 0x38, 0x09, 0x31, 0x33, 0x36, 0x37, 0x09, 0x31, 0x34, 0x38,
  0x39, 0x09, 0x35, 0x35, 0x09, 0x35, 0x34, 0x37, 0x09, 0x33, 0x34, 0x32,
  0x09, 0x35, 0x31, 0x32, 0x09, 0x33, 0x32, 0x33, 0x09, 0x35, 0x31, 0x0a,
  0x31, 0x33, 0x35, 0x36, 0x09, 0x31, 0x37, 0x38, 0x09, 0x31, 0x37, 0x30,
  0x35, 0x09, 0x31, 0x31, 0x39, 0x09, 0x31, 0x36, 0x30, 0x39, 0x09, 0x31,
  0x34, 0x30, 0x39, 0x09, 0x32, 0x34, 0x35, 0x09, 0x32, 0x39, 0x32, 0x09,
  0x31, 0x34, 0x33, 0x34, 0x09, 0x36, 0x39, 0x34, 0x09, 0x34, 0x30, 0x35,
  0x09, 0x31, 0x36, 0x39, 0x32, 0x09, 0x32, 0x34, 0x37, 0x09, 0x31, 0x39,
  0x33, 0x09, 0x31, 0x34, 0x38, 0x32, 0x09, 0x31, 0x34, 0x30, 0x37, 0x0a,
  0x32, 0x32, 0x33, 0x35, 0x09, 0x33, 0x33, 0x32, 0x31, 0x09, 0x33, 0x36,
  0x34, 0x37, 0x09, 0x32, 0x31, 0x32, 0x09, 0x31, 0x34, 0x30, 0x32, 0x09,
  0x33, 0x37, 0x31, 0x31, 0x09, 0x33, 0x36, 0x34, 0x31, 0x09, 0x31, 0x32,
  0x38, 0x37, 0x09, 0x32, 0x37, 0x32, 0x35, 0x09, 0x36, 0x39, 0x32, 0x09,
  0x31, 0x32, 0x33, 0x35, 0x09, 0x33, 0x31, 0x30, 0x30, 0x09, 0x31, 0x32,
  0x33, 0x09, 0x31, 0x34, 0x34, 0x09, 0x31, 0x30, 0x34, 0x09, 0x31, 0x30,
  0x31, 0x0a, 0x31, 0x33, 0x30, 0x36, 0x09, 0x31, 0x32, 0x32, 0x34, 0x09,
  0x31, 0x32, 0x33, 0x38, 0x09, 0x31, 0x38, 0x36, 0x09, 0x37, 0x35, 0x31,
  0x09, 0x37, 0x33, 0x34, 0x09, 0x31, 0x32, 0x30, 0x34, 0x09, 0x31, 0x32,
  0x37, 0x35, 0x09, 0x33, 0x36, 0x36, 0x09, 0x31, 0x34, 0x39, 0x09, 0x31,
  0x31, 0x31, 0x34, 0x09, 0x31, 0x36, 0x36, 0x09, 0x31, 0x31, 0x31, 0x38,
  0x09, 0x32, 0x33, 0x39, 0x09, 0x31, 0x35, 0x33, 0x09, 0x39, 0x34, 0x33,
  0x0a, 0x31, 0x33, 0x32, 0x09, 0x31, 0x35, 0x34, 0x37, 0x09, 0x31, 0x35,
  0x36, 0x34, 0x09, 0x35, 0x31, 0x32, 0x09, 0x32, 0x36, 0x34, 0x33, 0x09,
  0x32, 0x33, 0x37, 0x36, 0x09, 0x32, 0x33, 0x32, 0x34, 0x09, 0x32, 0x31,
  0x35, 0x39, 0x09, 0x31, 0x36, 0x35, 0x38, 0x09, 0x31, 0x30, 0x37, 0x09,
  0x31, 0x36, 0x30, 0x34, 0x09, 0x31, 0x34, 0x35, 0x09, 0x32, 0x34, 0x30,
  0x37, 0x09, 0x31, 0x33, 0x31, 0x09, 0x32, 0x30, 0x37, 0x33, 0x09, 0x31,
  0x38, 0x37, 0x38, 0x0a, 0x31, 0x38, 0x34, 0x35, 0x09, 0x39, 0x31, 0x09,
  0x31, 0x36, 0x36, 0x32, 0x09, 0x31, 0x30, 0x38, 0x09, 0x39, 0x32, 0x09,
  0x31, 0x37, 0x30, 0x36, 0x09, 0x31, 0x38, 0x31, 0x35, 0x09, 0x31, 0x37,
  0x39, 0x37, 0x09, 0x31, 0x37, 0x32, 0x38, 0x09, 0x31, 0x31, 0x35, 0x30,
  0x09, 0x31, 0x35, 0x37, 0x36, 0x09, 0x38, 0x33, 0x09, 0x39, 0x37, 0x09,
  0x35, 0x34, 0x37, 0x09, 0x31, 0x32, 0x36, 0x37, 0x09, 0x32, 0x36, 0x31,
  0x0a, 0x37, 0x38, 0x09, 0x35, 0x35, 0x38, 0x09, 0x34, 0x31, 0x39, 0x09,
  0x34, 0x33, 0x35, 0x09, 0x35, 0x36, 0x35, 0x09, 0x31, 0x30, 0x37, 0x09,
  0x36, 0x33, 0x38, 0x09, 0x31, 0x37, 0x33, 0x09, 0x39, 0x33, 0x09, 0x35,
  0x38, 0x30, 0x09, 0x33, 0x33, 0x38, 0x09, 0x35, 0x32, 0x09, 0x36, 0x33,
  0x33, 0x09, 0x32, 0x35, 0x36, 0x09, 0x33, 0x37, 0x37, 0x09, 0x37, 0x33,
  0x0a, 0x31, 0x31, 0x34, 0x33, 0x09, 0x33, 0x35, 0x31, 0x36, 0x09, 0x34,
  0x32, 0x30, 0x35, 0x09, 0x33, 0x35, 0x32, 0x33, 0x09, 0x31, 0x34, 0x38,
  0x09, 0x34, 0x30, 0x31, 0x09, 0x33, 0x39, 0x39, 0x36, 0x09, 0x33, 0x35,
  0x38, 0x38, 0x09, 0x33, 0x30, 0x30, 0x09, 0x31, 0x31, 0x31, 0x37, 0x09,
  0x32, 0x39, 0x31, 0x35, 0x09, 0x31, 0x36, 0x34, 0x39, 0x09, 0x31, 0x33,
  0x35, 0x09, 0x31, 0x33, 0x34, 0x09, 0x31, 0x38, 0x32, 0x09, 0x32, 0x36,
  0x37, 0x0a, 0x31, 0x35, 0x36, 0x09, 0x32, 0x37, 0x36, 0x30, 0x09, 0x31,
  0x38, 0x31, 0x36, 0x09, 0x32, 0x34, 0x34, 0x32, 0x09, 0x32, 0x39, 0x38,
  0x35, 0x09, 0x39, 0x39, 0x30, 0x09, 0x32, 0x35, 0x39, 0x38, 0x09, 0x31,
  0x32, 0x37, 0x33, 0x09, 0x31, 0x36, 0x37, 0x09, 0x38, 0x32, 0x31, 0x09,
  0x31, 0x33, 0x38, 0x09, 0x31, 0x34, 0x31, 0x09, 0x32, 0x37, 0x36, 0x31,
  0x09, 0x32, 0x33, 0x39, 0x39, 0x09, 0x31, 0x33, 0x33, 0x30, 0x09, 0x31,
  0x32, 0x37, 0x36, 0x0a, 0x33, 0x37, 0x34, 0x36, 0x09, 0x33, 0x39, 0x37,
  0x39, 0x09, 0x32, 0x39, 0x38, 0x39, 0x09, 0x31, 0x36, 0x31, 0x09, 0x34,
  0x35, 0x35, 0x34, 0x09, 0x31, 0x35, 0x36, 0x09, 0x33, 0x33, 0x35, 0x39,
  0x09, 0x31, 0x37, 0x33, 0x09, 0x33, 0x33, 0x31, 0x39, 0x09, 0x31, 0x39,
  0x32, 0x09, 0x33, 0x37, 0x30, 0x37, 0x09, 0x32, 0x36, 0x34, 0x09, 0x37,
  0x36, 0x32, 0x09, 0x32, 0x36, 0x37, 0x32, 0x09, 0x34, 0x34, 0x32, 0x33,
  0x09, 0x32, 0x39, 0x32, 0x34, 0x0a, 0x33, 0x30, 0x39, 0x38, 0x09, 0x34,
  0x33, 0x30, 0x39, 0x09, 0x34, 0x39, 0x37, 0x31, 0x09, 0x35, 0x34, 0x33,
  0x39, 0x09, 0x31, 0x33, 0x31, 0x09, 0x31, 0x37, 0x31, 0x09, 0x35, 0x35,
  0x34, 0x34, 0x09, 0x35, 0x39, 0x35, 0x09, 0x31, 0x35, 0x34, 0x09, 0x35,
  0x37, 0x31, 0x09, 0x34, 0x33, 0x39, 0x39, 0x09, 0x34, 0x32, 0x39, 0x34,
  0x09, 0x31, 0x36, 0x30, 0x09, 0x36, 0x32, 0x30, 0x31, 0x09, 0x34, 0x33,
  0x32, 0x39, 0x09, 0x35, 0x32, 0x34, 0x34, 0x0a, 0x37, 0x32, 0x38, 0x09,
  0x32, 0x34, 0x39, 0x09, 0x31, 0x37, 0x32, 0x38, 0x09, 0x33, 0x30, 0x35,
  0x09, 0x32, 0x34, 0x30, 0x37, 0x09, 0x32, 0x33, 0x39, 0x09, 0x36, 0x39,
  0x31, 0x09, 0x32, 0x32, 0x34, 0x31, 0x09, 0x32, 0x35, 0x34, 0x35, 0x09,
  0x31, 0x35, 0x34, 0x33, 0x09, 0x35, 0x35, 0x09, 0x32, 0x33, 0x30, 0x33,
  0x09, 0x31, 0x30, 0x32, 0x30, 0x09, 0x37, 0x35, 0x33, 0x09, 0x31, 0x39,
  0x33, 0x09, 0x31, 0x36, 0x33, 0x38, 0x0a, 0x32, 0x36, 0x30, 0x09, 0x33,
  0x35, 0x32, 0x09, 0x31, 0x39, 0x30, 0x09, 0x38, 0x37, 0x37, 0x09, 0x31,
  0x31, 0x38, 0x09, 0x37, 0x37, 0x09, 0x31, 0x30, 0x36, 0x35, 0x09, 0x31,
  0x31, 0x30, 0x35, 0x09, 0x31, 0x30, 0x38, 0x35, 0x09, 0x31, 0x30, 0x33,
  0x32, 0x09, 0x37, 0x31, 0x09, 0x38, 0x37, 0x09, 0x38, 0x35, 0x31, 0x09,
  0x35, 0x36, 0x09, 0x31, 0x31, 0x36, 0x31, 0x09, 0x36, 0x36, 0x37, 0x0a,
  0x31, 0x37, 0x36, 0x33, 0x09, 0x34, 0x36, 0x34, 0x09, 0x31, 0x38, 0x32,
  0x09, 0x31, 0x39, 0x33, 0x32, 0x09, 0x31, 0x32, 0x30, 0x39, 0x09, 0x36,
  0x34, 0x30, 0x09, 0x35, 0x34, 0x35, 0x09, 0x39, 0x33, 0x31, 0x09, 0x31,
  0x39, 0x37, 0x39, 0x09, 0x31, 0x39, 0x37, 0x09, 0x31, 0x37, 0x37, 0x34,
  0x09, 0x31, 0x37, 0x34, 0x09, 0x32, 0x30, 0x37, 0x34, 0x09, 0x31, 0x38,
  0x30, 0x30, 0x09, 0x39, 0x33, 0x39, 0x09, 0x31, 0x36, 0x31, 0x0a
};
unsigned int input_len = 1115;

int main() {
  string num = "";
  int line_max = 0;
  int line_min = 0;
  int sum1 = 0;
  int sum2 = 0;
  int n = 0;
  vector<int> nums;

  for (int i = 0; i < input_len; i++) {
    char c = input[i];

    switch (c) {
      // Newline means time to calculate the line's sums
      case 0x0a:
        // Handle last number on the line
        n = stoi(num);
        nums.push_back(n);
        num = "";
        if (n > line_max) {
          line_max = n;
        }
        if (n < line_min || line_min == 0) {
          line_min = n;
        }

        sum1 += line_max - line_min;

        // For part 2 we need to loop through all nums in the line and find the
        // two that are divisible
        for(int i = 0; i != nums.size()-1; i++) {
          for(int j = i+1; j != nums.size(); j++) {
            int a;
            int b;
            if (nums[i] < nums[j]) {
              a = nums[j];
              b = nums[i];
            } else {
              a = nums[i];
              b = nums[j];
            }
            if (a%b == 0) {
              sum2 += a/b;
              goto endloop;
            }
          }
        }
endloop:

        // Reset for new line
        line_max = 0;
        line_min = 0;
        nums.clear();
        break;

      // Tab means end of a number
      case 0x09:
        n = stoi(num);
        nums.push_back(n);
        num = "";
        if (n > line_max) {
          line_max = n;
        }
        if (n < line_min || line_min == 0) {
          line_min = n;
        }
        break;

      // default build up num
      default:
        num += c;
        break;
    }
  }

  cout << endl << "Checksum 1: " << sum1;
  cout << endl << "Checksum 2: " << sum2;
}
